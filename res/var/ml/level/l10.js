//Create Test DataSets using Sklearn
k=0;
k++;
window["type"+k] = "message";
window["ti"+k] = "Create Test DataSets using Sklearn"; //title
window["msg"+k] = `
Python’s Sklearn library provides a great sample dataset generator which will help you to create your own custom dataset. It’s fast and very easy to use. Following are the types of samples it provides.
<br><br>
For all the above methods you need to import <b>sklearn.datasets.samples_generator</b>.
${FullCode(`
# importing libraries
from sklearn.datasets import make_blobs
 
# matplotlib for plotting
from matplotlib import pyplot as plt 
from matplotlib import style

style.use("fivethirtyeight")
 
X, y = make_blobs(n_samples = 100, centers = 3, 
               cluster_std = 1, n_features = 2)
 
plt.scatter(X[:, 0], X[:, 1], s = 40, color = 'g')
plt.xlabel("X")
plt.ylabel("Y")
 
plt.show()
plt.clf()`)}
<h4>Output:</h4>
${ShowImage('11.png')}
<h3>sklearn.datasets.make_moon</h3>
${FullCode(`

# Creating Test DataSets using sklearn.datasets.make_moon
from sklearn.datasets import make_moons
from matplotlib import pyplot as plt 
from matplotlib import style
 
X, y = make_moons(n_samples = 1000, noise = 0.1)
plt.scatter(X[:, 0], X[:, 1], s = 40, color ='g')
plt.xlabel("X")
plt.ylabel("Y")
 
plt.show()
plt.clf()`)}
<h4>Output:</h4>
${ShowImage('12.png')}
<h3>sklearn.datasets.make_circle</h3>
${FullCode(`

# Creating Test DataSets using sklearn.datasets.make_circles
from sklearn.datasets import make_circles
from matplotlib import pyplot as plt 
from matplotlib import style
 
style.use("fivethirtyeight")
 
X, y = make_circles(n_samples = 100, noise = 0.02)
plt.scatter(X[:, 0], X[:, 1], s = 40, color ='g')
plt.xlabel("X")
plt.ylabel("Y")
 
plt.show()
plt.clf()`)}
<h4>Output:</h4>
${ShowImage('13.png')}
`; //message


k++;
window["type"+k] = "message";
window["ti"+k] = "Benefit of Scikit-learn test datasets"; //title
window["msg"+k] = `
Scikit-learn (sklearn) is a popular machine learning library for Python that provides a wide range of functionalities, including data generation. In order to create test datasets using Sklearn, you can use the above mentioned code:
<br><br>
<h3>Advantages of creating test datasets using Sklearn:</h3>
<ol>
    <li><b>Time-saving:</b> Sklearn provides a quick and easy way to generate test datasets for machine learning tasks, which saves time compared to manually creating datasets.</li>
    <li><b>Consistency:</b> The datasets generated by Sklearn are consistent and reproducible, which helps ensure consistency in your experiments and results.</li>
    <li><b>Flexibility:</b> Sklearn provides a wide range of functions for generating datasets, including functions for classification, regression, clustering, and more, which makes it a flexible tool for generating test datasets for different types of machine learning tasks.</li>
    <li><b>Control over dataset parameters:</b> Sklearn allows you to customize the generation of datasets by specifying parameters such as the number of samples, the number of features, and the level of noise, which gives you greater control over the test datasets you create.</li>
</ol>
<h3>Disadvantages of creating test datasets using Sklearn:</h3>
<ol>
    <li><b>Limited dataset complexity:</b> The datasets generated by Sklearn are typically simple and may not reflect the complexity of real-world datasets. Therefore, it may not be suitable for testing the performance of machine learning algorithms on complex datasets.</li>
    <li><b>Lack of diversity:</b> Sklearn datasets may not reflect the diversity of real-world datasets, which may limit the generalizability of your machine learning models.</li>
    <li><b>Overfitting risk:</b> If you generate test datasets that are too similar to your training datasets, there is a risk of overfitting your machine learning models, which can result in poor performance on new and unseen data.</li>
    <li>Overall, Sklearn provides a useful tool for generating test datasets quickly and efficiently, but it’s important to keep in mind the limitations and potential drawbacks of using synthetic datasets for machine learning testing. It’s recommended to use real-world datasets whenever possible to ensure the most accurate representation of the problem you are trying to solve.</li>
</ol>
`; //message

totalLevel = k;